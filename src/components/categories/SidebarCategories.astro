---
import { extractFlatCategories } from '../../utils/category-utils';

// 接收分类数据作为组件属性
const { categories = [] as any[] } = Astro.props;

// 使用新的平铺分类函数处理分类数据
const categoryList = extractFlatCategories(categories);

import '../../styles/components/categories/SidebarCategories.styl';
---

<!-- 文章分类部分 -->
<div class="sidebar-section categories">
  <div class="section-header">
    <h3>文章分类</h3>
    <button id="categories-toggle" class="section-toggle" aria-label="折叠分类">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="18" height="18">
        <path fill="currentColor" d="M7 10l5 5 5-5z"></path>
      </svg>
    </button>
  </div>  <div id="categories-content" class="section-content">
    <div class="category-list">
      {categoryList && categoryList.length > 0 ? (
        categoryList.map((category) => (
          <a href={`/categories/${category.name}`} class="category-tag">
            <span class="category-name">{category.name}</span>
            <span class="category-count">({category.count})</span>
          </a>
        ))
      ) : (
        <div class="no-categories">暂无分类</div>
      )}
    </div>
  </div>
</div>
<script>
  // 分类折叠/展开功能
  document.addEventListener('DOMContentLoaded', () => {
    const toggleBtn = document.getElementById('categories-toggle');
    const contentEl = document.getElementById('categories-content');
    
    if (toggleBtn && contentEl) {
      toggleBtn.addEventListener('click', () => {
        const isCollapsing = !contentEl.classList.contains('collapsed');
        
        if (isCollapsing) {
          // 快速折叠 (250ms)
          contentEl.style.transition = 'max-height 0.25s ease, opacity 0.25s ease';
        } else {
          // 缓慢展开 (600ms)
          contentEl.style.transition = 'max-height 0.6s ease, opacity 0.6s ease';
        }
        
        contentEl.classList.toggle('collapsed');
        toggleBtn.classList.toggle('collapsed');
      });
    }
  });
</script>