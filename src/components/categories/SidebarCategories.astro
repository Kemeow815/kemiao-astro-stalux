---
import { extractCategoryTrees } from './CategoryUtils';

// 接收分类数据作为组件属性
const { categories = [] as any[] } = Astro.props;

// 使用CategoryUtils中的函数处理分类数据
const { trees: rootCategories, allCategories } = extractCategoryTrees(categories);

// 获取缩进标记 - 为了保持原有侧边栏样式
function getIndentMark(level: number): string {
  if (level === 0) return '';
  return '  '.repeat(level);
}
---

<!-- 文章分类部分 -->
<div class="sidebar-section categories">
  <div class="section-header">
    <h3>文章分类</h3>
    <button id="categories-toggle" class="section-toggle" aria-label="折叠分类">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="18" height="18">
        <path fill="currentColor" d="M7 10l5 5 5-5z"></path>
      </svg>
    </button>
  </div>
  <div id="categories-content" class="section-content">
    <div class="category-tree">
      {allCategories && allCategories.length > 0 ? (
        allCategories.map((cat) => (
          <a href={`/categories/${cat.path}`} class={`category level-${cat.level}`}>
            <span class="indent">{getIndentMark(cat.level)}</span>
            <span class="category-name">{cat.name}</span>
          </a>
        ))
      ) : (
        <div class="no-categories">暂无分类</div>
      )}
    </div>
  </div>
</div>

<style lang="stylus">
.sidebar-section {
  background-color: rgba(0, 0, 0, 0.192)
  border-radius: 8px
  padding: 1rem
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.753)
  background-color: rgba(0, 0, 0, 0.1)
  margin-bottom: 1.5rem
  
  .section-header {
    display: flex
    justify-content: space-between
    align-items: center
    margin-bottom: 0.8rem
    border-bottom: 1px solid rgba(255, 255, 255, 0.2)
    padding-bottom: 0.5rem
    
    h3 {
      margin: 0
      font-size: 1.2rem
      color: rgba(255, 255, 255, 0.9)
    }
  }
  
  .section-toggle {
    background: none
    border: none
    color: rgba(255, 255, 255, 0.7)
    cursor: pointer
    padding: 0
    display: flex
    align-items: center
    justify-content: center
    transition: transform 0.3s ease
    
    &:hover {
      color: rgba(255, 255, 255, 1)
    }
    
    &.collapsed {
      transform: rotate(-90deg)
    }
  }
}

.section-content {
  max-height: 500px
  overflow-y: auto
  opacity: 1
  transition: max-height 0.3s ease, opacity 0.3s ease
  scrollbar-width: thin
  scrollbar-color: rgba(255, 255, 255, 0.3) transparent
  
  &::-webkit-scrollbar {
    width: 6px
  }
  
  &::-webkit-scrollbar-track {
    background: transparent
  }
  
  &::-webkit-scrollbar-thumb {
    background-color: rgba(255, 255, 255, 0.3)
    border-radius: 3px
  }
  
  &.collapsed {
    max-height: 0
    opacity: 0
    overflow: hidden
  }
}

.category-tree {
  display: flex
  flex-direction: column
  gap: 0.35rem
  padding: 0.2rem
}

.category {
  position: relative
  display: flex
  align-items: center
  border-radius: 4px
  padding: 0.25rem 0.4rem
  font-size: 0.85rem
  color: rgba(255, 255, 255, 0.9)
  text-decoration: none
  transition: all 0.2s ease
  margin-bottom: 0.1rem
  overflow: hidden
  
  .indent {
    color: rgba(255, 255, 255, 0.5)
    font-family: monospace
    margin-right: 0.2rem
    white-space: pre
    letter-spacing: -0.5px
  }
  
  .category-name {
    flex: 1
    overflow: hidden
    text-overflow: ellipsis
    white-space: nowrap
    position: relative
    z-index: 1
  }
  
  /* 不同层级的颜色和样式 */
  &.level-0 {
    font-weight: 600
    border-left: 2px solid rgba(255, 168, 70, 0.7)
  }
  
  &.level-1 {
    border-left: 2px solid rgba(114, 137, 218, 0.7)
  }
  
  &.level-2 {
    border-left: 2px solid rgba(70, 200, 120, 0.7)
  }
  
  &.level-3 {
    border-left: 2px solid rgba(220, 100, 150, 0.7)
  }
  
  &.level-4, &.level-5, &.level-6, &.level-7, &.level-8, &.level-9 {
    border-left: 2px solid rgba(180, 130, 180, 0.7)
    font-size: 0.8rem
  }
  
  /* 悬停效果 */
  &:hover {
    background-color: rgba(255, 255, 255, 0.18)
    transform: translateX(2px)
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2)
    
    .indent {
      color: rgba(255, 255, 255, 0.8)
    }
    
    &::before {
      content: ''
      position: absolute
      top: 0
      left: 0
      width: 100%
      height: 100%
      background: linear-gradient(90deg, 
        rgba(255, 255, 255, 0) 0%, 
        rgba(255, 255, 255, 0.05) 50%,
        rgba(255, 255, 255, 0) 100%)
      z-index: 0
      animation: shine 1s ease-in-out
    }
  }
}

.no-categories {
  color: rgba(255, 255, 255, 0.6)
  font-style: italic
  font-size: 0.9rem
  padding: 0.5rem
  text-align: center
}

@keyframes shine {
  0% {
    transform: translateX(-100%)
  }
  100% {
    transform: translateX(100%)
  }
}
</style>

<script>
  // 分类折叠/展开功能
  document.addEventListener('DOMContentLoaded', () => {
    const toggleBtn = document.getElementById('categories-toggle');
    const contentEl = document.getElementById('categories-content');
    
    if (toggleBtn && contentEl) {
      toggleBtn.addEventListener('click', () => {
        const isCollapsing = !contentEl.classList.contains('collapsed');
        
        if (isCollapsing) {
          // 快速折叠 (250ms)
          contentEl.style.transition = 'max-height 0.25s ease, opacity 0.25s ease';
        } else {
          // 缓慢展开 (600ms)
          contentEl.style.transition = 'max-height 0.6s ease, opacity 0.6s ease';
        }
        
        contentEl.classList.toggle('collapsed');
        toggleBtn.classList.toggle('collapsed');
      });
    }
  });
</script>