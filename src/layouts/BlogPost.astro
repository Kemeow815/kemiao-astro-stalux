---
import type { CollectionEntry } from 'astro:content';
import Head from '../components/Head.vue';
import Header from '../components/Header.vue';
import Footer from '../components/Footer.vue';
type Props = CollectionEntry<'posts'>['data'];
const { title, date, updated, abbrlink} = Astro.props;
---

<html lang="zh-CN">
	<head>
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<!-- <FormattedDate date={date} /> -->
							{
								updated && (
									<div class="last-updated-on">
										{/* Last updated on <FormattedDate date={updated} /> */}
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
	<script>
		// 使用 ES 模块导入语法引入脚本，确保打包工具可以正确处理
		import '../scripts/background.ts';
	  </script>
</html>

