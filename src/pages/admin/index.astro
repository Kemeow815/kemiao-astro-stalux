---
import { site } from "astro:config/server";
import Footer from "../../components/Footer.vue";
import Head from "../../components/Head.vue";
import Main from "../../components/Main.vue";

// 获取所有文章
const res = await fetch('http://localhost:3001/api/posts');
const { posts } = await res.json();
---

<html lang="zh-cn">
  <Head title="文章管理" description="Markdown 文章管理系统" />
  <body>
    <div class="admin-container">
      <header class="admin-header">
        <h1>文章管理系统</h1>
        <a href="/admin/edit" class="new-post-btn">写新文章</a>
      </header>
      
      <main class="posts-list">
        <h2>文章列表</h2>
        {posts.length === 0 ? (
          <div class="empty-list">
            <p>暂无文章，开始创作吧！</p>
          </div>
        ) : (
          <div class="posts-grid">
            {posts.map((post) => (
              <div class="post-card">
                <h3 class="post-title">
                  {post.frontmatter.title || post.filename}
                </h3>
                <div class="post-meta">
                  {post.frontmatter.date && <span class="post-date">{post.frontmatter.date}</span>}
                  {post.frontmatter.tags && (
                    <div class="post-tags">
                      {post.frontmatter.tags.map((tag: string) => (
                        <span class="post-tag">{tag}</span>
                      ))}
                    </div>
                  )}
                </div>
                <p class="post-excerpt">{post.excerpt || '无预览内容'}</p>
                <div class="post-actions">
                  <a href={`/admin/edit?filename=${post.filename}`} class="edit-btn">编辑</a>
                  <a href={`/posts/${post.filename.replace('.md', '')}`} class="view-btn">查看</a>
                  <button class="delete-btn" data-filename={post.filename}>删除</button>
                </div>
              </div>
            ))}
          </div>
        )}
      </main>
    </div>
    <Footer />
  </body>
</html>

<style>
  .admin-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }
  
  .admin-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid #eaeaea;
  }
  
  .new-post-btn {
    background-color: #4caf50;
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    text-decoration: none;
    font-weight: bold;
  }
  
  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
  }
  
  .post-card {
    border: 1px solid #eaeaea;
    border-radius: 8px;
    padding: 1.5rem;
    transition: transform 0.2s, box-shadow 0.2s;
  }
  
  .post-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0,0,0,0.1);
  }
  
  .post-title {
    margin-top: 0;
    font-size: 1.2rem;
    margin-bottom: 0.5rem;
  }
  
  .post-meta {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1rem;
    font-size: 0.85rem;
    color: #666;
  }
  
  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  
  .post-tag {
    background-color: #f0f0f0;
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
  }
  
  .post-excerpt {
    color: #444;
    margin-bottom: 1.5rem;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
  }
  
  .post-actions {
    display: flex;
    gap: 0.5rem;
  }
  
  .edit-btn, .view-btn, .delete-btn {
    padding: 0.3rem 0.8rem;
    border-radius: 4px;
    font-size: 0.9rem;
    cursor: pointer;
  }
  
  .edit-btn {
    background-color: #2196f3;
    color: white;
    text-decoration: none;
  }
  
  .view-btn {
    background-color: #ff9800;
    color: white;
    text-decoration: none;
  }
  
  .delete-btn {
    background-color: #f44336;
    color: white;
    border: none;
  }
  
  .empty-list {
    text-align: center;
    padding: 3rem;
    background-color: #f9f9f9;
    border-radius: 8px;
  }
</style>

<script>
  // 处理删除文章的功能
  document.addEventListener('DOMContentLoaded', () => {
    const deleteButtons = document.querySelectorAll('.delete-btn');
    
    deleteButtons.forEach(button => {
      button.addEventListener('click', async () => {
        const filename = button.getAttribute('data-filename');
        
        if (confirm(`确定要删除文章 "${filename}" 吗？此操作不可恢复！`)) {
          try {
            const response = await fetch(`http://localhost:3001/api/posts/${filename}`, {
              method: 'DELETE'
            });
            
            if (response.ok) {
              alert('文章已成功删除！');
              // 刷新页面以更新列表
              window.location.reload();
            } else {
              const error = await response.json();
              alert(`删除失败: ${error.error || '未知错误'}`);
            }
          } catch (err) {
            alert('删除失败，请检查网络连接！');
            console.error(err);
          }
        }
      });
    });
  });
</script>